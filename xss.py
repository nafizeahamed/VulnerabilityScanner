import scanner

class XSS:
    # To find xss in links
    def xss_in_link(self,url,vuln_scan):
        xss_test_script = "<sCript>alert(1)</scriPt>"
        #xss_test_script = "<svg/onload=prompt(1)>"
        url = url.replace("=","="+xss_test_script)
        response = vuln_scan.session.get(url)
        return xss_test_script in str(response.content)

    # To find xss in forms
    def xss_in_forms(self,form, url,vuln_scan):
        xss_test_script = "<sCript>alert(1)</scriPt>"
        response = vuln_scan.submit_forms(form, xss_test_script, url)
        return xss_test_script in str(response.content)

    # To scan xss
    def run_xss(self,vuln_scan):
        for link in vuln_scan.target_links:
            forms = vuln_scan.extract_forms(link)
            for form in forms:
                print("Testing form :" + link)
                is_vulnerable_to_xss = self.xss_in_forms(form, link,vuln_scan)
                if is_vulnerable_to_xss:
                    print("[+]XSS Discovered in " + link + " in the following form")
                    print(form)
            if "=" in link:
                print("Testing get_request :" + link)
                is_vulnerable_to_xss = self.xss_in_link(link,vuln_scan)
                if is_vulnerable_to_xss:
                    print("[-]XSS Discovered in" + link + "in the following form")
                    print(form)


def main():
    url = input("Enter the url : ")
    vuln_scan = scanner.Scanner(url, [])
    vuln_scan.crawl()
    xss_obj = XSS()
    xss_obj.run_xss(vuln_scan)

if __name__ == '__main__':
    main()
