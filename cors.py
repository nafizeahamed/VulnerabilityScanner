import requests
import scanner
import urllib.parse as urlparse
import re
from bs4 import BeautifulSoup
url=""
login_url=""
def submit_form(usr_value="administrator",pass_value="ghjghgbkbbhk"):
    global login_url
    form = vuln_scan.extract_forms(login_url)[0]
    action = form.get("action")
    post_url = urlparse.urljoin(login_url, action)
    post_data1 = {}
    inputs_list1 = form.find_all("input")
    for input in inputs_list1:
        input_name = input.get("name")
        input_type = input.get("type")
        input_value = input.get("value")
        if input_type == "username":
            input_value = usr_value
        elif input_type == "password":
            input_value = pass_value
        post_data1[input_name] = input_value
    post1 = vuln_scan.session.post(post_url, data=post_data1)
    return post1

def fetch():
    r=submit_form("wiener","peter")
    pt=re.findall("(?:fetch\()(.*?),",str(r.content))[0]
    fetch=pt.replace("\'","")
    fetch=fetch.replace("\\","")
    fetch=fetch.replace("/","")
    print(fetch)
    url1=urlparse.urljoin(url,fetch)
    res=vuln_scan.session.get(url1)
    if(res.status_code==200):
        vuln_scan.target_links.append(url1)
        print(url1)

def origin_reflection(link):
    var="https://evil.com"
    dict={"Origin":var}
    res=vuln_scan.session.get(link,headers=dict)
    print(res.headers)
    if(res.headers["Access-Control-Allow-Origin"]==var):
        print("CORS Vulnerability with basic origin reflection in "+link)
def null_origin(link):
    var = "null"
    dict = {"Origin": var}
    res = vuln_scan.session.get(link, headers=dict)
    print(res.headers)
    if (res.headers["Access-Control-Allow-Origin"] == var):
        print("CORS Vulnerability with null origin reflection in " + link)

if __name__ == '__main__':
    url = input("Enter the url : ")
    vuln_scan = scanner.Scanner(url, [])
    vuln_scan.crawl(url)
    login = input("Do you want to check cors in login page :(yes/no)")
    if login == "yes":
        print("The Url of login page might be :")
        for link in vuln_scan.target_links:
            login_list = ["login", "account", "Login"]
            for list in login_list:
                if list in link:
                    print(link)
        login_url = input("Enter the url of login page :")
        fetch()
    for link in vuln_scan.target_links:
        r = vuln_scan.session.get(link)
        try:
         if (r.headers["Access-Control-Allow-Credentials"] == "true"):
            print("cors:"+r.url)
            origin_reflection(link)
        except KeyError as ke:
            print("\rwaiting!",end="")